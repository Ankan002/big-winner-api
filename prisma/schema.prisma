generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  deposit
  bonus
  reward
  bet
  withdrawl
}

enum GameStatus {
  open
  evaluating
  closed
}

enum ColorGameChoice {
  red
  blue
  green
}

model Admin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  name       String
  password   String
  approved   Boolean  @default(false)
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt @map("updatedAt")
}

model User {
  id                            String                      @id @default(auto()) @map("_id") @db.ObjectId
  email                         String                      @unique
  password                      String
  username                      String                      @unique
  mobile_number                 String                      @unique
  refer_code                    String                      @unique
  disabled                      Boolean                     @default(false)
  email_verified                Boolean                     @default(false)
  referred_by_id                String?                     @db.ObjectId
  referred_by                   User?                       @relation("referred_by", fields: [referred_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  referred_to                   User[]                      @relation("referred_by")
  created_at                    DateTime                    @default(now()) @map("createdAt")
  updated_at                    DateTime                    @updatedAt @map("updatedAt")
  profile                       Profile?
  wallet                        Wallet?
  transaction                   Transaction[]
  daily_login                   DailyLogin[]
  daily_win_jackpot_entry       DailyWinJackpotEntry[]
  daily_win_jackpot_winner      DailyWinJackpotWinner[]
  daily_win_mega_jackpot_entry  DailyWinMegaJackpotEntry[]
  daily_win_mega_jackpot_winner DailyWinMegaJackpotWinner[]
  color_game_entry              ColorGameEntry[]
  color_game_winner             ColorGameWinner[]
}

model Profile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  avatar     String
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique @db.ObjectId
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt @map("updatedAt")
}

model Wallet {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  winning_balance BigInt   @default(0)
  current_balance BigInt   @default(0)
  bonus_balance   BigInt   @default(0)
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @unique @db.ObjectId
  created_at      DateTime @default(now()) @map("createdAt")
  updated_at      DateTime @updatedAt @map("updatedAt")
}

model Transaction {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  amount           BigInt
  transaction_type TransactionType
  user             User            @relation(fields: [userId], references: [id])
  userId           String          @db.ObjectId
  created_at       DateTime        @default(now()) @map("createdAt")
  updated_at       DateTime        @updatedAt @map("updatedAt")
}

model DailyLogin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  date       String
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt @map("updatedAt")
}

model DailyWinJackpot {
  id                        String                  @id @default(auto()) @map("_id") @db.ObjectId
  status                    GameStatus              @default(open)
  winning_number            Int?
  created_at                DateTime                @default(now()) @map("createdAt")
  updated_at                DateTime                @updatedAt @map("updatedAt")
  daily_win_jackpot_entries DailyWinJackpotEntry[]
  daily_win_jackpot_winners DailyWinJackpotWinner[]
}

model DailyWinJackpotEntry {
  id                        String                  @id @default(auto()) @map("_id") @db.ObjectId
  daily_win_jackpot         DailyWinJackpot         @relation(fields: [dailyWinJackpotId], references: [id])
  dailyWinJackpotId         String                  @db.ObjectId
  user                      User                    @relation(fields: [userId], references: [id])
  userId                    String                  @db.ObjectId
  token_amount              Int
  picked_number             Int
  created_at                DateTime                @default(now()) @map("createdAt")
  updated_at                DateTime                @updatedAt @map("updatedAt")
  daily_win_jackpot_winners DailyWinJackpotWinner[]
}

model DailyWinJackpotWinner {
  id                String               @id @default(auto()) @map("_id") @db.ObjectId
  daily_win_jackpot DailyWinJackpot      @relation(fields: [dailyWinJackpotId], references: [id])
  dailyWinJackpotId String               @db.ObjectId
  user              User                 @relation(fields: [userId], references: [id])
  userId            String               @db.ObjectId
  entry             DailyWinJackpotEntry @relation(fields: [entryId], references: [id])
  entryId           String               @db.ObjectId
  token_amount_won  Int
  created_at        DateTime             @default(now()) @map("createdAt")
  updated_at        DateTime             @updatedAt @map("updatedAt")
}

model DailyWinMegaJackpot {
  id                             String                      @id @default(auto()) @map("_id") @db.ObjectId
  status                         GameStatus                  @default(open)
  winning_number                 Int?
  created_at                     DateTime                    @default(now()) @map("createdAt")
  updated_at                     DateTime                    @updatedAt @map("updatedAt")
  daily_win_mega_jackpot_entries DailyWinMegaJackpotEntry[]
  daily_win_mega_jackpot_winners DailyWinMegaJackpotWinner[]
}

model DailyWinMegaJackpotEntry {
  id                             String                      @id @default(auto()) @map("_id") @db.ObjectId
  daily_win_mega_jackpot         DailyWinMegaJackpot         @relation(fields: [dailyWinJackpotId], references: [id])
  dailyWinJackpotId              String                      @db.ObjectId
  user                           User                        @relation(fields: [userId], references: [id])
  userId                         String                      @db.ObjectId
  token_amount                   Int
  picked_number                  Int
  created_at                     DateTime                    @default(now()) @map("createdAt")
  updated_at                     DateTime                    @updatedAt @map("updatedAt")
  daily_win_mega_jackpot_winners DailyWinMegaJackpotWinner[]
}

model DailyWinMegaJackpotWinner {
  id                     String                   @id @default(auto()) @map("_id") @db.ObjectId
  daily_win_mega_jackpot DailyWinMegaJackpot      @relation(fields: [dailyWinJackpotId], references: [id])
  dailyWinJackpotId      String                   @db.ObjectId
  user                   User                     @relation(fields: [userId], references: [id])
  userId                 String                   @db.ObjectId
  entry                  DailyWinMegaJackpotEntry @relation(fields: [entryId], references: [id])
  entryId                String                   @db.ObjectId
  token_amount_won       Int
  created_at             DateTime                 @default(now()) @map("createdAt")
  updated_at             DateTime                 @updatedAt @map("updatedAt")
}

model ColorGame {
  id                 String            @id @default(auto()) @map("_id") @db.ObjectId
  status             GameStatus        @default(open)
  winning_color      ColorGameChoice?
  created_at         DateTime          @default(now()) @map("createdAt")
  updated_at         DateTime          @updatedAt @map("updatedAt")
  color_game_entries ColorGameEntry[]
  color_game_winners ColorGameWinner[]
}

model ColorGameEntry {
  id                 String            @id @default(auto()) @map("_id") @db.ObjectId
  picked_color       ColorGameChoice
  token_amount       Int
  color_game         ColorGame         @relation(fields: [colorGameId], references: [id])
  colorGameId        String            @db.ObjectId
  user               User              @relation(fields: [userId], references: [id])
  userId             String            @db.ObjectId
  created_at         DateTime          @default(now()) @map("createdAt")
  updated_at         DateTime          @updatedAt @map("updatedAt")
  color_game_winners ColorGameWinner[]
}

model ColorGameWinner {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  user             User           @relation(fields: [userId], references: [id])
  userId           String         @db.ObjectId
  color_game       ColorGame      @relation(fields: [colorGameId], references: [id])
  colorGameId      String         @db.ObjectId
  color_game_entry ColorGameEntry @relation(fields: [colorGameEntryId], references: [id])
  colorGameEntryId String         @db.ObjectId
  token_amount_won Int
  created_at       DateTime       @default(now()) @map("createdAt")
  updated_at       DateTime       @updatedAt @map("updatedAt")
}
